---
# install
- name: DATABASE - MariaDB Repo
  copy:
    src: mariadb.redhat.repo.j2
    dest: /etc/yum.repos.d/mariadb.repo
    mode: 0644
  tags:
    - MariaDB Repo

- name: DATABASE - Install mysql
  ansible.builtin.dnf:
    name: "{{ nextcloud_mysql_packages }}"
    state: present

- name: "DATABASE - [MariaDB] - Ensure MySQL is started and enabled on boot."
  ansible.builtin.service:
    name: "{{ mysql_service }}"
    state: started
    enabled: true

- name: DATABASE - init root user
  ansible.builtin.command: >
    sudo mysql -uroot -e "
    SET old_passwords=0;
    SET PASSWORD FOR root@localhost = PASSWORD('{{ mariadb_root_password }}');
    FLUSH PRIVILEGES;"

- name: DATABASE - root save my.cnf
  ansible.builtin.ini_file:
    owner: root
    path: "/root/.my.cnf"
    section: client
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    mode: '0600'
  with_items:
    - option: user
      value: root
    - option: password
      value: "{{ mariadb_root_password }}"
    - option: default-character-set
      value: utf8mb4

- name: DATABASE - save my.cnf
#  become: yes
#  become_user: "{{ nextcloud_os_user }}"
  ansible.builtin.ini_file:
    #owner: "{{ nextcloud_os_user }}"
    #group: "{{ nextcloud_os_user }}"
    owner: root
    group: root
    path: "/home/{{ nextcloud_os_user }}/.my.cnf"
    section: client
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    mode: '0755'
  with_items:
    - option: user
      value: "{{ nextcloud_db_user }}"
    - option: password
      value: "{{ nextcloud_db_password }}"
    - option: default-character-set
      value: utf8mb4

- name: DATABASE - create nextcloud db
  community.mysql.mysql_db:
    name: "{{ nextcloud_db_name }}"
    encoding: utf8mb4
    collation: utf8mb4_general_ci
    state: present

- name: DATABASE - add nextcloud mysql user
  community.mysql.mysql_user:
    name: "{{ nextcloud_db_user }}"
    password: "{{ nextcloud_db_password }}"
    priv: 'nextcloud.*:ALL'
    state: present

- name: DATABASE - mariadb settings for mysqld
  notify:
    - restart mariadb
  ansible.builtin.lineinfile:
    name: "{{ mysql_configuration_destination }}/server.cnf"
    insertafter: '^\[mysqld]'
    line: "{{ item }}"
  with_items:
    - innodb_buffer_pool_size = "{{ innodb_buffer_pool_size }}"
    - max_allowed_packet = 64M
    - innodb_read_only_compressed = 0
    - event_scheduler = ON
    - transaction_isolation = READ-COMMITTED
    - character_set_server = utf8mb4 
    - collation_server = utf8mb4_general_ci
    - binlog_format = ROW
    - innodb_large_prefix=on
    - innodb_file_format=barracuda
    - innodb_file_per_table=1

#- name: mariadb settings for client
#  notify:
#    - restart mariadb
#  ansible.builtin.lineinfile:
#    name: /etc/mysql/mariadb.conf.d/50-server.cnf
#    insertafter: '^\[client]'
#    line: "{{ item }}"
#  with_items:
#    - default-character-set = utf8mb4

- name: DATABASE - mariadb settings for server
  notify:
    - restart mariadb
  ansible.builtin.lineinfile:
    name: "{{ mysql_configuration_destination }}/server.cnf"
    insertafter: '^\[server]'
    line: "{{ item }}"
  with_items:
    - innodb_buffer_pool_size = 128M
    - innodb_buffer_pool_instances = 1
    - innodb_flush_log_at_trx_commit = 2
    - innodb_log_buffer_size = 32M
    - innodb_max_dirty_pages_pct = 90
    - query_cache_type = 1
    - query_cache_limit = 2M
    - query_cache_min_res_unit = 2k
    - query_cache_size = 64M
    - tmp_table_size = 64M
    - max_heap_table_size= 64M
    - slow_query_log = 1 
    - slow_query_log_file = /var/log/mysql/slow.log
    - long_query_time = 1

- name: DATABASE - restart mariadb, because we need the event scheduler
  ansible.builtin.meta: flush_handlers
